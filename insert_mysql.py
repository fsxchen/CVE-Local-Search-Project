#!/usr/bin/env python

import os
import sys
import re
import time
import MySQLdb
import string

def check_db():
    
    # check if there have the same name database
    
    print "db_check"
    conn = MySQLdb.connect(host='localhost',user='root',passwd='123456')
    curs = conn.cursor()
    curs.execute("show databases")
    
    for db in curs.fetchall():
          if db[0] == 'CVE_DB':
              conn.close()
              return 1
          
    curs.execute("create database CVE_DB")
    conn.close()
    return 0

def main():
    
    # main function
    
    now_time = time.localtime()
    syear_s = now_time.tm_year
    smon_s = now_time.tm_mon
    smday_s = now_time.tm_mday
    shour_s = now_time.tm_hour
    smin_s = now_time.tm_min
    ssec_s = now_time.tm_sec
    
    #print now_time.tm_year
    
    fp = open("allitems.txt", "r")
    
    re_check_db = check_db()
    conn = MySQLdb.connect(host = 'localhost', user = 'root', passwd = '123456', db = "CVE_DB")
    curs = conn.cursor()
    
    CVE_db_name = "CVE_date_%d%d%d%d%d%d" % (syear_s, smon_s, smday_s, shour_s, smin_s, ssec_s)
    #CVE_db_name = "t"
    
    sql_1 = """create table %s
            (name char(100) not null,
            status char(100) not null,
            url char(100),
            phase char(255),
            category char(255),
            reference char(255),
            current_votes char(255),
            voter_comments char(255),
            others char(255))""" % CVE_db_name
            
    curs.execute(sql_1)
    
    count_lines = 1
    count_sql_execute = 1
    
    flag = 0
    once_current_flag = 0
    once_voter_flag = 0
    
    once_name = []
    once_status = []
    once_url = []
    once_phase = []
    once_category = []
    once_reference = []
    once_current_votes = []
    once_voter_comments = []
    once_others = []
    
    for f in fp.readlines():
        #print "--------------------%s(%d)<%d>--------------------" % (f, len(f), flag)
        #print flag
        point = re.match("=", f)
        if point != None:
            
            # the point will become 1 when get the object start ===
            # and will become 0 when get the object end ===
            
            #print f
            if flag == 0:
                flag = 1
            else:
                flag = 0
                
                print 'execute the sql -- %s' % count_sql_execute
            
                if len(once_name) == 1:
                    once_name_i = once_name[0]
                    
                if len(once_status) == 1:
                    once_status_i = once_status[0]
                    
                if len(once_url) == 1:
                    once_url_i = once_url[0]
                elif len(once_url) == 0:
                    once_url_i = "No URL info"
                    
                if len(once_phase) == 1:
                    once_phase_i = once_phase[0]
                elif len(once_phase) == 0:
                    once_phase_i = "No Phase info"
                    
                if len(once_category) == 1:
                    once_category_i = once_category[0]
                elif len(once_category) == 0:
                    once_category_i = "No Category info"
                    
                #print len(once_reference)
                if len(once_reference) != 0:
                    once_reference_m = ""
                    for ori in once_reference:
                        once_reference_m = "%s%s" % (once_reference_m, ori)
                    if len(once_reference_m) > 254:
                        once_reference_i = once_reference_m[0:250] + "..."
                    else:
                        once_reference_i = once_reference_m
                elif len(once_reference) == 0:
                    once_reference_i = "No Reference info"
                    
                if len(once_current_votes) != 0:
                    once_current_votes_m = ""
                    for ocv in once_current_votes:
                        once_current_votes_m = "%s%s" % (once_current_votes_m, ocv)
                    if len(once_current_votes_m) > 254:
                        once_current_votes_i = "%s%s" % (once_current_votes[0:250], "...")
                    else:
                        once_current_votes_i = once_current_votes_m
                elif len(once_current_votes) == 0:
                    once_current_votes_i = "No Current Vote info"
                        
                if len(once_voter_comments) != 0:
                    #print once_voter_comments
                    once_voter_comments_m = ""
                    for ocv_o in once_voter_comments:
                        if len(ocv_o) != 1:
                            once_voter_comments_m = "%s%s" % (once_voter_comments_m, ocv_o)
                    if len(once_voter_comments_m) > 254:
                        once_voter_comments_i = "%s%s" % (once_voter_comments_m[0:250], "...")
                        #print once_voter_comments_i
                    else:
                        once_voter_comments_i = once_voter_comments_m
                elif len(once_voter_comments) == 0:
                    once_voter_comments_i = "No Voter Comment info"
                        
                if len(once_others) != 0:
                    once_others_m = ""
                    for oo in once_others:
                        once_others_m = "%s%s" % (once_others_m, oo)
                    if len(once_others_m) > 254:
                        once_others_i = "%s%s" % (once_others_m[0:250], "...")
                    else:
                        once_others_i = once_others_m
                elif len(once_others) == 0:
                    once_others_i = "No Others info"
                        
                #print "*****************************************************************************************************************"
                #print "once_name_i", once_name_i
                #print "once_status_i", once_status_i
                #print "once_url_i", once_url_i
                #print "once_phase_", once_phase_i
                #print "once_category_i", once_category_i
                #print "once_reference_i", once_reference_i
                #print "once_current_votes_i", once_current_votes_i
                #print "once_voter_comments_i", once_voter_comments_i
                #print "once_others_i", once_others_i
                #print "*****************************************************************************************************************"
                
                sql_insert = """insert into
                            %s
                            (name,
                            status,
                            url,
                            phase,
                            category,
                            reference,
                            current_votes,
                            voter_comments)
                            
                            values 
                            
                            ('%s',
                            '%s',
                            '%s',
                            '%s',
                            '%s',
                            '%s',
                            '%s',
                            '%s')""" % (CVE_db_name, once_name_i, once_status_i, once_url_i, once_phase_i, once_category_i, once_reference_i, once_current_votes_i, once_voter_comments_i)
                            
                print once_name_i
                
                curs.execute(sql_insert)
                
                #print "once_name_i", once_name_i
                #print "once_status_i", once_status_i
                #print "once_url_i", once_url_i
                #print "once_phase_", once_phase_i
                #print "once_category_i", once_category_i
                #print "once_reference_i", once_reference_i
                #print "once_current_votes_i", once_current_votes_i
                #print "once_voter_comments_i", once_voter_comments_i
                #print "once_others_i", once_others_i
                
                count_sql_execute += 1
                #conn.commit()
                
                # we delete all the data in list
                
                for o0 in once_name:
                    once_name.remove(o0)
                for o1 in once_status:
                    once_status.remove(o1)
                for o2 in once_url:
                    once_url.remove(o2)
                for o3 in once_phase:
                    once_phase.remove(o3)
                for o4 in once_category:
                    once_category.remove(o4)
                for o5 in once_reference:
                    once_reference.remove(o5)
                for o6 in once_current_votes:
                    once_current_votes.remove(o6)
                for o7 in once_voter_comments:
                    once_voter_comments.remove(o7)
                for o8 in once_others:
                    once_others.remove(o8)
                flag = 1
                
##################################################
        
        f_0 = re.sub("\/", " ", f)
        f_1 = re.sub("\?", " ", f_0)
        final_f = re.sub("\'", " ", f_1)
        
        if flag == 1:
            if once_current_flag == 1:
                #print "++++++++++once_current_flag++++++++++"
                #print once_current_flag
                if (len(final_f) == 1):
                    once_current_flag = 0
                    #print "End the once_current_flag"
                    
                else:
                    c_f_m = re.sub(" ", "", final_f, 1)
                    once_current_votes.append(c_f_m)
                    #print once_current_votes
                
            elif once_voter_flag == 1:
                #print "++++++++++once_voter_flag++++++++++"
                #print once_voter_flag
                if (len(final_f) == 1):
                    once_voter_flag =0
                    #print "End the once_voter_flag"
                    
                else:
                    v_f_m = re.sub(" ", "", final_f, 1) 
                    once_voter_comments.append(v_f_m)
                    #print once_voter_comments
                    
            else:
                
                if len(f) != 1:
                    
                    name_s = re.match("Name:", final_f)
                    status_s = re.match("Status:", final_f)
                    url_s = re.match("URL:", final_f)
                    phase_s = re.match("Phase:", final_f)
                    category_s = re.match("Category:", final_f)
                    reference_s = re.match("Reference:", final_f)
                    current_votes_s = re.match("Current Votes:", final_f)
                    voter_comments_s = re.match("Voter Comments:", final_f)
                    
                    if name_s != None:
                        #print final_f
                        once_name_line_list = final_f.split(":")
                        #print once_name_line_list
                        once_name_line = once_name_line_list[1]
                        #print once_name_line
                        once_name_s = re.sub(" ", "", once_name_line)
                        once_name.append(once_name_s)
                        #print "once_name", once_name
                        
                    elif status_s != None:
                        #print final_f
                        once_status_line_list = final_f.split(":")
#                        if len(once_status_line_list) != 2:
                            #once_status = once_status_line_list
                        
                        once_status_line = once_status_line_list[1]
                        once_status_s = re.sub(" ", "", once_status_line)
                        once_status.append(once_status_s)
                        #print "once_status", once_status
                        
                    elif url_s != None:
                        #print final_f 
                        once_url_line_list = final_f.split(":", 1)
                        #if len(once_url_line_list) != 2:
                            #once_url = once_url_line_list
                            
                        once_url_line = once_url_line_list[1]
                        once_url_s = re.sub(" ", "", once_url_line)
                        once_url.append(once_url_s)
                        #print "once_url", once_url
                        
                    elif phase_s != None:
                        #print final_f
                        once_phase_line_list = final_f.split(":")
                        once_phase_line = once_phase_line_list[1]
                        once_phase_s = re.sub(" ", "", once_phase_line)
                        once_phase.append(once_phase_s)
                        #print "once_phase", once_phase
                        
                    elif category_s != None:
                        #print final_f
                        once_category_line_list = final_f.split(":")
                        once_category_line = once_category_line_list[1]
                        once_category_s = re.sub(" ", "", once_category_line, 1)
                        once_category.append(once_category_s)
                        #print "once_category", once_category
                        
                    elif reference_s != None:
                        #print final_f
                        once_reference_line_list = final_f.split(":", 1)
                        #print once_reference_line_list
                        once_reference_line_m = once_reference_line_list[1]
                        #print once_reference_line_m
                        once_reference_line = re.sub("\n\n", "\n", once_reference_line_m)
                        once_reference_s = re.sub(" ", "", once_reference_line, 1)
                        once_reference.append(once_reference_s)
                        #print "once_reference", once_reference
                        
                    elif current_votes_s != None:
                        #print "Get current"
                        once_current_flag = 1
                        
                    elif voter_comments_s != None:
                        #print "Get voter"
                        once_voter_flag = 1
                        
                    else:
                        if len(final_f) != 1:
                            if (re.match("=", final_f) == None):
                                once_others.append(final_f)
                            
    conn.commit()
    conn.close()
    fp.close()
    

if __name__ == "__main__":
    main()
